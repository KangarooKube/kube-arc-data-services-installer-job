name: Nightly Docker Image Publish - Preview

on:
  schedule:
    - cron: '5 0 * * *'
  push:
    branches: [ "test-nightly-build" ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Pull build args for preview build
      - name: Build ARGs from stable release file
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: release/release.preview.env

      # Login against a Docker registry except on push
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'push'
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.0.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.ARC_DATA_CONTROLLER_VERSION }}_${{ env.ARC_DATA_RELEASE_TRAIN }}
        
      # Build image for push
      - name: Build Docker and push container
        if: github.event_name != 'push'
        uses: docker/build-push-action@v3
        with:
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            HELM_VERSION=${{ env.HELM_VERSION }} 
            KUBECTL_VERSION=${{ env.KUBECTL_VERSION }} 
            AZCLI_VERSION=${{ env.AZCLI_VERSION }}
            EXT_K8S_CONFIGURATION_VERSION=${{ env.EXT_K8S_CONFIGURATION_VERSION }}
            EXT_K8S_EXTENSION_VERSION=${{ env.EXT_K8S_EXTENSION_VERSION }}
            EXT_K8S_CONNECTEDK8S_VERSION=${{ env.EXT_K8S_CONNECTEDK8S_VERSION }}
            EXT_K8S_CUSTOMLOCATION_VERSION=${{ env.EXT_K8S_CUSTOMLOCATION_VERSION }}
            ARC_DATA_RELEASE_TRAIN=${{ env.ARC_DATA_RELEASE_TRAIN }}
            ARC_DATA_EXT_VERSION=${{ env.ARC_DATA_EXT_VERSION }}
            ARC_DATA_CONTROLLER_VERSION=${{ env.ARC_DATA_CONTROLLER_VERSION }}
            ARC_DATA_WHL_URL=${{ env.ARC_DATA_WHL_URL }}
          push: true
          load: true