name: Create Release Branch
on:
  workflow_dispatch:
    inputs:
      arcDataServicesImageTag:
        description: 'ImageTag for Data Services'
        required: true
      arcDataServicesExtVersion:
        description: 'ARC for Kubernetes Data Service extension version'
        required: true
      azArcDataExtURL:
        description: 'Input URL for arcdata az cli wheel file download'
        required: true
      arcDataServicesReleaseTrain:
        description: 'Release for Data Services'
        type: choice
        required: true
        options:
        - stable
        - preview
        - test

env:
  RELEASE_NAME: ${{ github.event.inputs.arcDataControllerImageTag }}_${{ github.event.inputs.arcDataServicesReleaseTrain }}
  ARC_DATA_CONTROLLER_VERSION: ${{ github.event.inputs.arcDataControllerImageTag }}
  ARC_DATA_EXT_VERSION: ${{ github.event.inputs.arcDataServicesExtVersion }}
  ARC_DATA_WHL_URL: ${{ github.event.inputs.azArcDataExtURL }}
  ARC_DATA_RELEASE_TRAIN: ${{ github.event.inputs.arcDataServicesReleaseTrain }}
  RELEASE_FILENAME: 'release.${{ github.event.inputs.arcDataServicesReleaseTrain }}.env'
  IS_WORKFLOW: true

jobs:
  release-branch:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Install Docker
      uses: docker-practice/actions-setup-docker@master
    - name: Validate Docker install
      run: docker version
    - name: Create Release Branch
      run: git checkout -b release/$RELEASE_NAME
    - name: Create Release File
      working-directory: release
      run: make -j create-new-release
    - name: Update Changelog
      uses: thomaseizinger/keep-a-changelog-new-release@v1
      with:
        version: ${{ github.event.inputs.arcDataControllerImageTag }}
        tag: ${{ github.event.inputs.arcDataServicesReleaseTrain }}
    - name: Initialize Git Config
      run: |
       git config user.name "GitHub Actions"
       git config user.email noreply@github.com
    - name: Commit Changelog and Manifest Files
      run: |
        git add release/$RELEASE_FILENAME
        git add CHANGELOG.md
        git commit --message "Prepare release $ARC_DATA_CONTROLLER_VERSION of train $ARC_DATA_RELEASE_TRAIN"
        echo "::set-output name=commit::$(git rev-parse HEAD)"
    - name: Push New Branch
      run: git push origin release/$RELEASE_NAME
    